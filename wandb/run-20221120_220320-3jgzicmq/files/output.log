GAT(
  (conv1): GATConv((-1, -1), 2, heads=1)
)
Traceback (most recent call last):
  File "formatSAGE.py", line 499, in <module>
    main()
  File "formatSAGE.py", line 410, in main
    train_acc,pred_train = test(model,optimizer,criterion,data['Admission'].train_mask,data,device)
  File "formatSAGE.py", line 237, in test
    out = model(data.x_dict, data.edge_index_dict, data.edge_attr_dict)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/fx/graph_module.py", line 652, in call_wrapped
    return self._wrapped_call(self, *args, **kwargs)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/fx/graph_module.py", line 277, in __call__
    raise e
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/fx/graph_module.py", line 267, in __call__
    return super(self.cls, obj).__call__(*args, **kwargs)  # type: ignore[misc]
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "<eval_with_key>.1", line 37, in forward
    conv1__Drugs = self.conv1.Admission__has_drugs__Drugs((x__Admission, x__Drugs), edge_index__Admission__has_drugs__Drugs, edge_attr__Admission__has_drugs__Drugs);  edge_index__Admission__has_drugs__Drugs = edge_attr__Admission__has_drugs__Drugs = None
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch_geometric/nn/conv/gat_conv.py", line 242, in forward
    out = self.propagate(edge_index, x=x, alpha=alpha, edge_attr=edge_attr,
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 317, in propagate
    out = self.message(**msg_kwargs)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch_geometric/nn/conv/gat_conv.py", line 282, in message
    alpha = softmax(alpha, index, ptr, size_i)
RuntimeError: The following operation failed in the TorchScript interpreter.
Traceback of TorchScript (most recent call last):
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch_geometric/utils/softmax.py", line 44, in softmax
        src_max = src_max.index_select(dim, index)
        out = (src - src_max).exp()
        out_sum = scatter(out, index, dim, dim_size=N, reduce='sum')
                  ~~~~~~~ <--- HERE
        out_sum = out_sum.index_select(dim, index)
    else:
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch_scatter/scatter.py", line 152, in scatter
    """
    if reduce == 'sum' or reduce == 'add':
        return scatter_sum(src, index, dim, out, dim_size)
               ~~~~~~~~~~~ <--- HERE
    if reduce == 'mul':
        return scatter_mul(src, index, dim, out, dim_size)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch_scatter/scatter.py", line 21, in scatter_sum
            size[dim] = int(index.max()) + 1
        out = torch.zeros(size, dtype=src.dtype, device=src.device)
        return out.scatter_add_(dim, index, src)
               ~~~~~~~~~~~~~~~~ <--- HERE
    else:
        return out.scatter_add_(dim, index, src)
RuntimeError: setStorage: sizes [769, 1], strides [0, 1], storage offset 0, and itemsize 4 requiring a storage size of 4 are out of bounds for storage of size 0
../aten/src/ATen/native/cuda/Indexing.cu:975: indexSelectLargeIndex: block: [6,0,0], thread: [0,0,0] Assertion `srcIndex < srcSelectDimSize` failed.
Traceback (most recent call last):
  File "formatSAGE.py", line 499, in <module>
    main()
  File "formatSAGE.py", line 410, in main
    train_acc,pred_train = test(model,optimizer,criterion,data['Admission'].train_mask,data,device)
  File "formatSAGE.py", line 237, in test
    out = model(data.x_dict, data.edge_index_dict, data.edge_attr_dict)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/fx/graph_module.py", line 652, in call_wrapped
    return self._wrapped_call(self, *args, **kwargs)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/fx/graph_module.py", line 277, in __call__
    raise e
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/fx/graph_module.py", line 267, in __call__
    return super(self.cls, obj).__call__(*args, **kwargs)  # type: ignore[misc]
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "<eval_with_key>.1", line 37, in forward
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch_geometric/nn/conv/gat_conv.py", line 242, in forward
    out = self.propagate(edge_index, x=x, alpha=alpha, edge_attr=edge_attr,
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch_geometric/nn/conv/message_passing.py", line 317, in propagate
    out = self.message(**msg_kwargs)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch_geometric/nn/conv/gat_conv.py", line 282, in message
    alpha = softmax(alpha, index, ptr, size_i)
RuntimeError: The following operation failed in the TorchScript interpreter.
Traceback of TorchScript (most recent call last):
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch_geometric/utils/softmax.py", line 44, in softmax
        src_max = src_max.index_select(dim, index)
        out = (src - src_max).exp()
        out_sum = scatter(out, index, dim, dim_size=N, reduce='sum')
                  ~~~~~~~ <--- HERE
        out_sum = out_sum.index_select(dim, index)
    else:
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch_scatter/scatter.py", line 152, in scatter
    """
    if reduce == 'sum' or reduce == 'add':
        return scatter_sum(src, index, dim, out, dim_size)
               ~~~~~~~~~~~ <--- HERE
    if reduce == 'mul':
        return scatter_mul(src, index, dim, out, dim_size)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch_scatter/scatter.py", line 21, in scatter_sum
            size[dim] = int(index.max()) + 1
        out = torch.zeros(size, dtype=src.dtype, device=src.device)
        return out.scatter_add_(dim, index, src)
               ~~~~~~~~~~~~~~~~ <--- HERE
    else:
        return out.scatter_add_(dim, index, src)
RuntimeError: setStorage: sizes [769, 1], strides [0, 1], storage offset 0, and itemsize 4 requiring a storage size of 4 are out of bounds for storage of size 0