Traceback (most recent call last):
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/fx/graph_module.py", line 267, in __call__
    return super(self.cls, obj).__call__(*args, **kwargs)  # type: ignore[misc]
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "<eval_with_key>.1", line 41, in forward
    conv1__Admission6 = torch.add(conv1__Admission1, conv1__Admission2);  conv1__Admission1 = conv1__Admission2 = None
TypeError: add(): argument 'input' (position 1) must be Tensor, not tuple
Call using an FX-traced Module, line 41 of the traced Module's generated forward function:
    conv1__Admission5 = self.conv1.Diagnosis__rev_has_diagnosis__Admission((x__Diagnosis, x__Admission), edge_index__Diagnosis__rev_has_diagnosis__Admission, edge_attr__Diagnosis__rev_has_diagnosis__Admission, return_attention_weights = True);  x__Diagnosis = x__Admission = edge_index__Diagnosis__rev_has_diagnosis__Admission = edge_attr__Diagnosis__rev_has_diagnosis__Admission = None
    conv1__Admission6 = torch.add(conv1__Admission1, conv1__Admission2);  conv1__Admission1 = conv1__Admission2 = None
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ <--- HERE
    conv1__Admission7 = torch.add(conv1__Admission3, conv1__Admission4);  conv1__Admission3 = conv1__Admission4 = None
    conv1__Admission8 = torch.add(conv1__Admission5, conv1__Admission6);  conv1__Admission5 = conv1__Admission6 = None
Traceback (most recent call last):
  File "formatSAGE.py", line 499, in <module>
    main()
  File "formatSAGE.py", line 406, in main
    loss,out,w = train(model,optimizer,criterion,data,loader,device)
  File "formatSAGE.py", line 221, in train
    out,w = model(batch.x_dict, batch.edge_index_dict,batch.edge_attr_dict)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/fx/graph_module.py", line 652, in call_wrapped
    return self._wrapped_call(self, *args, **kwargs)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/fx/graph_module.py", line 275, in __call__
    raise e.with_traceback(None)
TypeError: add(): argument 'input' (position 1) must be Tensor, not tuple
Traceback (most recent call last):
  File "formatSAGE.py", line 499, in <module>
    main()
  File "formatSAGE.py", line 406, in main
    loss,out,w = train(model,optimizer,criterion,data,loader,device)
  File "formatSAGE.py", line 221, in train
    out,w = model(batch.x_dict, batch.edge_index_dict,batch.edge_attr_dict)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/fx/graph_module.py", line 652, in call_wrapped
    return self._wrapped_call(self, *args, **kwargs)
  File "/home/aftab/aftab/my-project-env/lib/python3.8/site-packages/torch/fx/graph_module.py", line 275, in __call__
    raise e.with_traceback(None)
TypeError: add(): argument 'input' (position 1) must be Tensor, not tuple
GAT(
  (conv1): GATConv((-1, -1), 2, heads=1)
)